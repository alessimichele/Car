car_details_v4 <- read_csv("~/Desktop/Statistics_Project/data/car details v4.csv")
View(car_details_v4)
knitr::opts_chunk$set(echo = TRUE)
car<-car_details_v4
require(readr)
require(stringr)
require(MASS)
require(ggplot2)
require(PerformanceAnalytics)
require(corrplot)
library(mice)
library(VIM)
library(tidyverse)
# cleaning of columns
car$`Max Torque` <- as.numeric(str_extract(car$`Max Torque`,"[0-9]*\\.*[0-9]*"))
car$`Max Power` <- as.numeric(str_extract(car$`Max Power`,"[0-9]*\\.*[0-9]*"))
car$`Engine` <- as.numeric(gsub(" cc","",car$`Engine`))
# remove Location and Color
car <- car[, -c(8,9)]
number <- car  %>%
summarise_all(list(~is.na(.)))%>%
pivot_longer(everything(),
names_to = "variables", values_to="missing") %>%
count(variables, missing)
miss <- as.data.frame(number[number$missing==T, ])
miss <- miss[order(miss$n, decreasing = T), ]
miss$proportion <- round((miss$n)/nrow(car)*100, 2)
miss
for (i in 1:nrow(car)) {
if (sum(is.na(car[i, ])) >= 8) {
car <- car[-i, ]
}
}
number <- car  %>%
summarise_all(list(~is.na(.)))%>%
pivot_longer(everything(),
names_to = "variables", values_to="missing") %>%
count(variables, missing)
miss <- as.data.frame(number[number$missing==T, ])
miss <- miss[order(miss$n, decreasing = T), ]
miss$proportion <- round((miss$n)/nrow(car)*100, 2)
miss
car$Height[is.na(car$Height)] <- mean(car$Height, na.rm=T)
car$Width[is.na(car$Width)] <- mean(car$Width, na.rm=T)
car$Length[is.na(car$Length)] <- mean(car$Length, na.rm=T)
car$`Seating Capacity`[is.na(car$`Seating Capacity`)] <-5
car$`Max Torque`[is.na(car$`Max Torque`)] <-mean(car$"Max Torque", na.rm=T)
car$`Max Power`[is.na(car$`Max Power`)] <-mean(car$"Max Power", na.rm=T)
car$`Engine`[is.na(car$`Engine`)] <-mean(car$"Engine", na.rm=T)
car$`Fuel Tank Capacity`[is.na(car$`Fuel Tank Capacity`)] <-mean(car$"Fuel Tank Capacity", na.rm=T)
car$`Drivetrain`[is.na(car$`Drivetrain`)] <- "FWD"
sum(is.na(car))
year <- car$Year
par(mfrow=c(1,2))
hist.scott(year, breaks = 30)
boxplot(year)
# butto via l'oss con Year = 1988
car <- car[ - which(car$Year == 1988), ]
price <- car$Price
l_price <- log(price)
par(mfrow=c(2,2))
hist.scott(price, breaks = 50)
boxplot(price)
hist.scott(l_price, breaks = 50)
boxplot(l_price)
car$Kilometer <- car$Kilometer/1000
km <- car$Kilometer
par(mfrow=c(1,2))
hist.scott(km, breaks = 50)
boxplot(km)
car <- car[car$Kilometer!=0,  ]
car <- car[car$Kilometer != 2000000 , ]
l_km <- log(car$Kilometer)
par(mfrow=c(1,2))
hist.scott(l_km, breaks = 50)
boxplot(l_km)
engine <- car$Engine
par(mfrow=c(1,2))
hist.scott(engine)
boxplot(engine)
car$`Max Power` <- round(car$`Max Power`,0 )
power <- car$`Max Power`
par(mfrow=c(1,2))
hist.scott(power)
boxplot(power)
names(car)[names(car) == 'Max Power'] <- 'Power'
car$`Max Torque` <- round(car$`Max Torque`,0 )
torque <- car$`Max Torque`
par(mfrow=c(1,2))
hist.scott(torque)
boxplot(torque)
names(car)[names(car) == 'Max Torque'] <- 'Torque'
lenght <- car$Length/1000 # metri
par(mfrow=c(1,2))
hist.scott(lenght, breaks=15)
boxplot(lenght)
height <- car$Height/1000 # metri
par(mfrow=c(1,2))
hist.scott(height)
boxplot(height)
width <- car$Width/1000 # metri
par(mfrow=c(1,2))
hist.scott(width)
boxplot(width)
fuel <- car$`Fuel Tank Capacity`
par(mfrow=c(1,2))
truehist(fuel)
boxplot(fuel)
names(car)[names(car) == 'Fuel Tank Capacity'] <- 'TankCapacity'
make <- car$Make
table(make)
#create bar chart of teams, ordered from large to small
ggplot(car, aes(x=reorder(make, make, function(x)-length(x)))) +
geom_bar(fill='steelblue') +
labs(x='Fuel type')
fuelt <- car$`Fuel Type`
table(fuelt)
#create bar chart of teams, ordered from large to small
ggplot(car, aes(x=reorder(fuelt, fuelt, function(x)-length(x)))) +
geom_bar(fill='steelblue') +
labs(x='Fuel type')
## we decide to put together
fact <- c("CNG", "CNG + CNG", "Electric", "Hybrid", "LPG", "Petrol + CNG")
car$`Fuel Type`[car$`Fuel Type` %in% fact] <- "Other"
table(car$`Fuel Type`)
trans <- car$Transmission
table(trans)
#create bar chart of teams, ordered from large to small
ggplot(car, aes(x=reorder(trans, trans, function(x)-length(x)))) +
geom_bar(fill='steelblue') +
labs(x='Transmission')
owner <- car$Owner
table(owner)
#create bar chart of teams, ordered from large to small
ggplot(car, aes(x=reorder(owner, owner, function(x)-length(x)))) +
geom_bar(fill='steelblue') +
labs(x='Owner')
fact <- c("4 or More", "Fourth", "Third")
car$Owner[car$Owner %in% fact] <- "Third or more"
table(car$Owner)
sellert <- car$`Seller Type`
table(sellert)
#create bar chart of teams, ordered from large to small
ggplot(car, aes(x=reorder(sellert, sellert, function(x)-length(x)))) +
geom_bar(fill='steelblue') +
labs(x='Seller type')
drive <- car$Drivetrain
table(drive)
#create bar chart of teams, ordered from large to small
ggplot(car, aes(x=reorder(drive,drive, function(x)-length(x)))) +
geom_bar(fill='steelblue') +
labs(x='Drivetrain')
seat <- car$`Seating Capacity`
table(seat)
#create bar chart of teams, ordered from large to small
ggplot(car, aes(x=reorder(seat,seat, function(x)-length(x)))) +
geom_bar(fill='steelblue') +
labs(x='Seating capacity')
# questa rimane da sistemare
fact <- c(2,4)
car$`Seating Capacity`[car$`Seating Capacity` %in% fact] <- ">5"
fact1 <- c(6,7,8)
car$`Seating Capacity`[car$`Seating Capacity` %in% fact1] <- "<5"
table(car$`Seating Capacity`)
names(car)[names(car) == 'Seating Capacity'] <- 'SeatingCapacity'
cont <- as.data.frame(cbind(log(car$Price) , car$Year, log(car$Kilometer), car$Engine, car$`Power`, car$`Torque`, car$Length, car$Width, car$Height, car$`TankCapacity`))
colnames(cont) <- c("Price", "Year", "Kilometer", "Engine", "Power", "Torque", "Lenght", "Width", "Height", "TankCapacity")
pairs(cont, pch=19,cex=0.1)
M <- round(cor(cont),2)
corrplot(M, method="number", type = "lower", number.cex = 0.7, tl.col = "black")
car$`Fuel Type` <- as.factor(car$`Fuel Type`)
car$Transmission <- as.factor(car$Transmission)
#car$Color <- as.factor(car$Color)
car$Owner <- as.factor(car$Owner)
#car$Location <- as.factor(car$Location)
car$`Seller Type`<- as.factor(car$`Seller Type`)
car$Drivetrain <- as.factor(car$Drivetrain)
car$`SeatingCapacity` <- as.factor(car$`SeatingCapacity`)
car$Make <- as.factor(car$Make)
str(car)
car$TankCapacity <- round(car$TankCapacity,0)
car$Engine <- round(car$Engine,0)
car <- car[,-2]
car$Make <- factor(car$Make)
str(car)
write.csv(car,"car.csv", row.names=FALSE)
View(car)
knitr::opts_chunk$set(echo = TRUE)
car <- read.csv("./car.csv")
library(dplyr)
#make this example reproducible
set.seed(1)
# shuffle the dataframe by rows
car= car[sample(1:nrow(car)), ]
#make this example reproducible
set.seed(1)
#create ID column
car$id <- 1:nrow(car)
#use 80% of dataset as training set and 20% as test set
train <- car %>% dplyr::sample_frac(0.80)
test <- dplyr::anti_join(car, train, by = 'id')
train <- train[, -19]
test <- test[, -19]
View(car)
lm <- lm(Price ~ as.factor(Make)+Year+Kilometer+as.factor(Fuel.Type)+as.factor(Transmission)+
as.factor(Owner)+as.factor(Seller.Type)+Engine+Power+Torque+
as.factor(Drivetrain)+Length+Width+Height+as.factor(SeatingCapacity)
+TankCapacity, data=train)
summary(lm)
View(train)
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
pisa = read_csv('data/pisasci2006.csv')
knitr::opts_chunk$set(cache.rebuild=T, cache = T)
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
pisa = read_csv('data/pisasci2006.csv')
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
pisa = read_csv('data/pisasci2006.csv')
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
pisa = read.csv('data/pisasci2006.csv')
pisa %>%
tidyext::num_by(vars(-Country)) %>%
gt(decimals = 1)
# knitr::opts_chunk$set(cache.rebuild=F, cache = T)
# knitr::opts_chunk$set(cache.rebuild=F, cache = T)
knitr::opts_chunk$set(cache.rebuild=F, cache = T)
plot_ly(data = d) %>%
add_markers( ~ x,
~ y,
marker = list(color = '#D55E00', opacity = .1),
showlegend = F) %>%
add_lines( ~ x, ~ fits, color =  ~ polynomial, data = fits) %>%
config(displayModeBar = F) %>%
theme_plotly()
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
car <- car
library(tidyverse)
car %>%
tidyext::num_by(vars(-Country)) %>%
gt(decimals = 1)
install.packages("gt")
library(gt)
car %>%
tidyext::num_by(vars()) %>%
gt(decimals = 1)
View(car)
car %>%
tidyext::num_by(vars(-id)) %>%
gt(decimals = 1)
car %>%
tidyext::num_by(vars(-id)) %>%
gt(decimals = 1)
car %>%
tidyext::num_by(vars(-id))
source('funcs/better_smooth.R')
source('funcs/better_corr.R')
p = GGally::ggpairs(
pisa[, 18],
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none"
)
p = GGally::ggpairs(
car[, 18],
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none"
)
str(car)
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
car <- read_csv("car.csv")
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
car <- read_csv("car.csv")
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
car = read_csv('car.csv')
# url for the data is:
# https://raw.githubusercontent.com/m-clark/generalized-additive-models/master/data/pisasci2006.csv
car = read_csv('car.csv',show_col_types = FALSE)
car %>%
tidyext::num_by(vars(-id)) %>%
gt(decimals = 1)
source('funcs/better_smooth.R')
source('funcs/better_corr.R')
p = GGally::ggpairs(
car[, -18],
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none"
)
p = GGally::ggpairs(
car,
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none"
)
p = GGally::ggpairs(
car,
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5,
cardinality_threshold = 34
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none"
)
p = GGally::ggpairs(
car,
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none"
)
p = GGally::ggpairs(
car,
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none",
cardinality_threshold = 34
)
p = GGally::ggpairs(
car,
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none",
cardinality_threshold = 34
)
p
sample(nrow(car),nrow(car)*0.8)
p = GGally::ggpairs(
car[, -c(1,5,6,7,8,12,13)],
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none",
cardinality_threshold = 34
)
p
p = GGally::ggpairs(
car[, -c(1,5,6,7,8,12,13,16,17)],
lower = list(
continuous = GGally::wrap(
better_smooth,
ptalpha = .25,
ptcol = '#D55E00',
ptsize = 1,
linecol = '#03b3ff',
method = 'loess',
se = F,
lwd = .5
)
),
diag = list(continuous = GGally::wrap(
'densityDiag', color = 'gray50', lwd = .5
)),
# upper=list(continuous=GGally::wrap(better_corr)),
axisLabels = "none",
cardinality_threshold = 34
)
p
car
set.seed(1)
index <- sample(nrow(car), nrow(car)*0.8, replace = F)
train <- car[index, ]
test <- car[-index, ]
View(test)
View(train)
nrow(train)
nrow(test)
nrow(train) + nrow(test)
nrow(car)
nrow(train) + nrow(test) == nrow(car)
lm <- lm(Price ~ as.factor(Make)+Year+Kilometer+as.factor(Fuel.Type)+as.factor(Transmission)+
as.factor(Owner)+as.factor(Seller.Type)+Engine+Power+Torque+
as.factor(Drivetrain)+Length+Width+Height+as.factor(SeatingCapacity)
+TankCapacity, data=train)
View(train)
str(train)
rm(list=ls())
library(readr)
car <- read_csv("~/Desktop/generalized-additive-models/car.csv")
View(car)
str(car)
rm(list=ls())
quit()
