---
title: "Car Project"
format: revealjs
editor: visual
---

## Car Project

blablabla

## Goal

Goal for our project

-   Content authored with markdown
-   Output from executable code

## Data Analysis

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(ggplot2)
car <- read.csv("./car.csv")
# Remove observation 1080
car <- car[car$Kilometer != 2000.000,]
```

## Data Exploration

Let's do something.

```{r}
ggplot(car, aes(x=Kilometer, y=log(Price) )) +
  geom_bin2d(bins = 30) +
  scale_fill_continuous(type = "viridis") +
  theme_bw()
```

## Kilometer vs Log Price

```{r}
ggplot(car[ car$Kilometer < 100 & car$Kilometer >50 & car$Price>exp(13) & car$Price< exp(15),], aes(x=Kilometer, y=log(Price), size = Engine, color = Fuel.Type)) +
    geom_point(alpha=0.5) +
  scale_size(range = c(.2, 7), name="Engine")
```

## Linear Model

First, we split our data into train and test set.

```{r}
set.seed(1)
index <- sample(nrow(car), nrow(car)*0.8, replace=F)
train <- car[index,]
test <- car[-index,]
```

Then fit the first model, using the logarithm of *Price*

```{r}
train$log_price <- log(train$Price)
lm1 <- lm(log_price ~ as.factor(Make)+Year+Kilometer+as.factor(Fuel.Type)+as.factor(Transmission)+as.factor(Owner)+as.factor(Seller.Type)+Engine+Power+Torque+
            as.factor(Drivetrain)+Length+Width+Height+as.factor(SeatingCapacity)
         +TankCapacity, data=train)
summary(lm1)
```

## Residuals plot

```{r}
par(mfrow=c(2,2))
plot(lm1)
```

## Residuals plot vs continuous explanatory variables

Looking at the residuals plot vs the continuous explanatory variable is a good check to highlight (if there are) structures/patterns in the residuals (lab 6)

## First reduction

Remove the variables *Engine* and *Torque*

```{r}
lm_pwr <- lm(log_price ~ as.factor(Make)+Year+Kilometer+as.factor(Fuel.Type)+as.factor(Transmission)+
         as.factor(Owner)+as.factor(Seller.Type)+Power+
         as.factor(Drivetrain)+Length+Width+Height+as.factor(SeatingCapacity)
         +TankCapacity, data=train)
summary(lm_pwr)
```

## Residuals plot

```{r}
par(mfrow=c(2,2))
plot(lm_pwr)
```

```{r}
anova(lm_pwr,lm1)
```

```{r}
library(DAAG)
AIC(lm_pwr)
```

## 

Second reduction

Remove the variables *Seller Type* and *Drive Train*

```{r}
lm4 <- lm(log_price ~ as.factor(Make)+Year+Kilometer+as.factor(Fuel.Type)+as.factor(Transmission)+
         as.factor(Owner)+Power+Length+Width+Height+as.factor(SeatingCapacity)
         +TankCapacity, data=train)
summary(lm4)
```

```{r}
AIC(lm4)
```

```{r}
anova(lm4, lm_pwr)
```

```{r}
library(MASS)
par(mfrow=c(1,1))
hist.scott(lm4$residuals, freq = F)
curve(dnorm(x,0,sd(lm4$residuals)), add=T, col=2)
```

```{r}
hist(lm4$residuals, freq = F, breaks = 15)
curve(dnorm(x,0,sd(lm4$residuals)), add=T, col=2)
```

## Remove the variable Make

```{r}
lm_noMake <- lm(log_price ~ Year+Kilometer+as.factor(Fuel.Type)+as.factor(Transmission)+as.factor(Owner)+as.factor(Seller.Type)+Power+as.factor(Drivetrain)+Length+Width+Height+as.factor(SeatingCapacity)+TankCapacity, data=train)

summary(lm_noMake)
```

```{r}
AIC(lm_noMake)
```

```{r}
anova(lm_noMake,lm_pwr)
```

## Comparison

```{r}
Model <- c("Full", "Fully reduced","No make")
AIC <- c(AIC(lm1),AIC(lm4),AIC(lm_noMake))
Adjusted_R2 <- c(summary(lm1)$adj.r.squared,summary(lm4)$adj.r.squared,summary(lm_noMake)$adj.r.squared)
Residual_SE <- c(summary(lm1)$sigma,summary(lm4)$sigma,summary(lm_noMake)$sigma)
cbind(model,AIC,Adjusted_R2,Residual_SE)
```

## Plot Fitted vs Predicted

```{r, echo=F}
library(ggplot2)
plot(
  lm4,
  which = 1,
  bty = 'n',
  pch = 19,
  col = scales::alpha('#D55E00', .2),
  lwd = 2,
  cex = .95,
  col.lab = 'gray25',
  col.axis = 'gray50',
  col.sub = 'gray50',
  cex.caption = 1,
  cex.oma.main = 1.25,
  yaxt = 'n'
)
axis(2, col = 'gray75', col.axis = 'gray33')
axis(1, col = 'gray75', col.axis = 'gray33')
```

## 
